# Generated by Django 4.2.18 on 2025-01-29 02:44

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('first_name', models.CharField(max_length=100)),
                ('last_name', models.CharField(max_length=100)),
                ('age', models.DateField()),
                ('phone', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=60)),
                ('password', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
            ],
            options={
                'db_table': 'user',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Habitat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('photo', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'habitat',
            },
        ),
        migrations.CreateModel(
            name='Register',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=100)),
                ('scientific_name', models.CharField(max_length=100)),
                ('function', models.CharField(max_length=100)),
                ('description', models.CharField(max_length=100)),
                ('habitat', models.CharField(max_length=100)),
                ('distribution', models.CharField(max_length=100)),
                ('sound', models.CharField(max_length=100)),
                ('photo', models.CharField(max_length=100)),
                ('video', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'register',
            },
        ),
        migrations.CreateModel(
            name='RegisterThreat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('register', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.register')),
            ],
            options={
                'db_table': 'register_threat',
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('status', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'status',
            },
        ),
        migrations.CreateModel(
            name='TypeRegister',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('type_register', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'type_register',
            },
        ),
        migrations.CreateModel(
            name='TypeUser',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('type_user', models.CharField(max_length=30)),
            ],
            options={
                'db_table': 'type_user',
            },
        ),
        migrations.CreateModel(
            name='Threat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=30)),
                ('register', models.ManyToManyField(related_name='threats', through='api_parque.RegisterThreat', to='api_parque.register')),
            ],
            options={
                'db_table': 'threat',
            },
        ),
        migrations.CreateModel(
            name='Sighting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('description', models.TextField(max_length=300)),
                ('date', models.DateField(auto_now=True)),
                ('photo', models.CharField(max_length=30)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'sighting',
            },
        ),
        migrations.AddField(
            model_name='registerthreat',
            name='threat',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.threat'),
        ),
        migrations.CreateModel(
            name='RegisterHabitat',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False, unique=True)),
                ('habitat', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.habitat')),
                ('register', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.register')),
            ],
            options={
                'db_table': 'register_habitat',
            },
        ),
        migrations.AddField(
            model_name='register',
            name='status_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.status'),
        ),
        migrations.AddField(
            model_name='register',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.typeregister'),
        ),
        migrations.AddField(
            model_name='habitat',
            name='register',
            field=models.ManyToManyField(related_name='habitats', through='api_parque.RegisterHabitat', to='api_parque.register'),
        ),
        migrations.AddField(
            model_name='user',
            name='type_id',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api_parque.typeuser'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions'),
        ),
    ]
